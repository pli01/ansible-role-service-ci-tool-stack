ci_elk_stack_name: "ci-elk-stack"
ci_elk_stack_conf_dir: "{{ env_file_system }}/docker-compose/{{ ci_elk_stack_name }}"
ci_elk_stack_docker_compose: "{{ ci_elk_stack_conf_dir }}/docker-compose.yml"
ci_elk_stack_service_volume_dir:
  - { dir: '{{ env_file_system }}/opt/elasticsearch-data', owner: 1000, group: 'root' }
ci_elk_stack_config_env:
  - { src: "../files/front/elk_80.conf", dest: "{{ ci_tool_stack_conf_dir }}/elk_80.conf" }
ci_elk_stack_systemd_service:
  ci_elk_stack:
    description: '{{ ci_elk_stack_name }}'
    # Start the service on boot
    enabled: Yes
    working_directory: "{{ ci_elk_stack_conf_dir }}"
    after: docker.service
    requires: docker.service
    type: oneshot
    remain_after_exit: 'yes'
    timeoutsec: 120
    environment: "{{ common_environment }}"
    exec_start_pre: "{{ common_exec_start_pre }}"
    exec_start: "{{ common_exec_start }}"
    exec_stop: "{{ common_exec_stop }}"
    exec_reload: "{{ common_exec_reload }}"
    wanted_by: multi-user.target
ci_elk_stack_services:
  version: '3.0'
  networks:
    prodnetwork:
      driver: bridge
    #  TODO: swarm mode
    #    driver: overlay
      driver_opts:
        com.docker.network.driver.mtu: '1450'
  services:
    front:
      image: "ci-tool-stack/nginx:latest"
      depends_on:
        - kibana
      networks:
        prodnetwork:
          aliases:
            - front
      ports:
        - 80:80
      restart: always
      volumes:
        - "{{ ci_elk_stack_conf_dir }}/elk_80.conf:/etc/nginx/conf.d/default.conf:ro"

    logstash:
      image: ci-tool-stack/logstash:6.2.3
      depends_on:
        - elasticsearch
      restart: always
      networks:
        prodnetwork:
          aliases:
            - elk
  
    elasticsearch:
      image: ci-tool-stack/elasticsearch:6.2.3
      restart: always
      networks:
        prodnetwork:
          aliases:
            - elk
      volumes:
        - "{{ env_file_system }}/opt/elasticsearch-data:/usr/share/elasticsearch/data"
      environment:
        - cluster.name=docker-cluster
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
    kibana:
      image: ci-tool-stack/kibana:6.2.3
      ports: [ '5601:5601' ]
      depends_on:
        - elasticsearch
      restart: always
      networks:
        prodnetwork:
          aliases:
            - elk
