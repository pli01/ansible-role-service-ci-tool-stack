upstream "back_kibana" {
    server kibana:5601;
}

server {
  listen 80;
        keepalive_timeout  5 5;
        proxy_buffering    off;
        client_max_body_size 1G;

#  listen 80 default_server;
#  server_name _;
#   access_log /var/log/nginx/kibana_ci.access.log;
#   error_log /var/log/nginx/kibana_ci.error.log;
#   access_log syslog:server=unix:/dev/log,facility=local7,tag=nginx,severity=info,nohostname custom;
#   error_log syslog:server=unix:/dev/log,facility=local7,tag=nginx,severity=error,nohostname warn;
  error_log /dev/stderr debug;
  access_log /dev/stdout combined;

   set $kibanaback "http://back_kibana/";
   location / {
       rewrite ^/kibana/(.*)$ /$1 break;
       proxy_pass $kibanaback;
       proxy_redirect off;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection 'upgrade';
       proxy_cache_bypass $http_upgrade;

       proxy_http_version 1.1;
       proxy_request_buffering off;
       proxy_buffering off; # Required for HTTP-based CLI to work over SSL

       proxy_pass_header Access-Control-Allow-Origin;
       proxy_pass_header Access-Control-Allow-Methods;
       proxy_hide_header Access-Control-Allow-Headers;
       add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
       add_header Access-Control-Allow-Credentials true;
   }
}


